#!/usr/bin/env python
# coding: utf-8

from src import mk_dir, sum_to_x, file_generation, get_comb, backUp
import os
import matplotlib.pyplot as plt


## Generate fake files 
data_path = "fake_files/"
file_generation(data_path)


## Generate a sequence of new directories to be back-up floppy disks
disks_path = "floppy_disks/"
n = 120 # the number of floppy disks as required in the question description
mk_dir(disks_path,n)


## Create a dictionary to store the size of each file
file_size = {}
    # Key: file name 
    # Value: file size in Bytes

with os.scandir(data_path) as files:
    for file in files:
       
        # Since the code is written in Jupyter Notebook, there are two files which are nt the fake files generated by the code.
        # The size is in Byte.
        if str(file.name) != '.DS_Store' and str(file.name) != '.ipynb_checkpoints':
            file_size[str(file.name)] = os.stat(data_path + str(file.name)).st_size
        
print("The maximum size of the files in MB: ", max(file_size.values())/1024/1024)
print("The number of files: ", len(file_size))
print("The total storge occupied by the files in MB: ", sum(file_size.values())/1024/1024)


## Draw the distribution of the number of files under different sizes
## Comment Line 42 to 61 if don't need this figure
# Count the number of files in different sizes 
# and convert the size from Byte to Kilobytes for easily understanding the big numbers.
size_count = {}
for size in file_size.values():
    size = round((size / 1024), 3)
    if size in size_count:
        size_count[size] += 1
    else:
        size_count[size] = 1
        
# Sorted by the keys, which are sizes of the files
size_count = sorted(size_count.items(),reverse=False)
#print("The number of files in different sizes(KB): \n", size_count)

# unpack the sorted list of pairs into two tuples in order to draw the plot
x, y = zip(*size_count) 
plt.plot(x, y,'.-')
plt.xlabel("Size of each file in Kilobytes")
plt.ylabel("Number of files")
plt.savefig('Distribution_of_file_sizes.png')
plt.show()
plt.close()


## Copy files to destination: floppy disks
# Store file names and sizes in two tuples
file_size_ls = sorted(file_size.items(), key=lambda x: x[1], reverse=False)
names, sizes = zip(*file_size_ls)

#print(file_size_ls[20])
#print(names[20])
#print(sizes[20])

comb_names = get_comb(sizes, names)
#print(comb_names)
print("The number of floppy disks which will be used: ", len(comb_names))

backUp(data_path, disks_path , comb_names)
print("All the files are successfully copied to floppy disks!")
